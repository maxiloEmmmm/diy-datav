// Code generated by entc, DO NOT EDIT.

package assets

const (
	// Label holds the string label denoting the assets type in the database.
	Label = "assets"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldExt holds the string denoting the ext field in the database.
	FieldExt = "ext"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// EdgeView holds the string denoting the view edge name in mutations.
	EdgeView = "view"
	// Table holds the table name of the assets in the database.
	Table = "assets"
	// ViewTable is the table the holds the view relation/edge.
	ViewTable = "views"
	// ViewInverseTable is the table name for the View entity.
	// It exists in this package in order to avoid circular dependency with the "view" package.
	ViewInverseTable = "views"
	// ViewColumn is the table column denoting the view relation/edge.
	ViewColumn = "assets_view"
)

// Columns holds all SQL columns for assets fields.
var Columns = []string{
	FieldID,
	FieldPath,
	FieldExt,
	FieldType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
